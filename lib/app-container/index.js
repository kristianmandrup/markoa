'use strict';
let extend = require('extend');

// new appContainer(koaApp)
module.exports = function(koaApp, opts) {
  opts = opts || {debug: false};
  if (!koaApp)
    throw 'AppContainer constructor must take a koaApp as argument';

  let Mounter = require('./mounter');
  let Routes = require('./routes');

  let appContainer = {
    koaApp: koaApp,
    apps: {},
    debug: opts.debug,
    log: function(msg, obj) {
      if (!opts.debug) return;
      obj ? this.logger(msg, obj) : this.logger(msg);
    },
    logger: opts.logger || console.log,
    state: {
      page: {}, // for any page
      $global: {}
    },
    join: function(appContainer) {
      extend(apps, appContainer.apps);
      return this;
    },
    createRoutes: function() {
      for (let name of Object.keys(this.apps)) {
        let config = this.apps[name];
        this.routes.add(name, config);
      }
      return this;
    },
    // A koaApp is generated by calling koa() which creates a Koa server app instance
    start: function() {
      this.koaApp.koaServer.start();
      return this;
    },
    Mounter: Mounter,
    Routes: Routes
  };
  appContainer.routes = new Routes(appContainer, koaApp);
  appContainer.mount = new Mounter(appContainer);
  return appContainer;
}
